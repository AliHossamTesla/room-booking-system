name: Java CI/CD with Maven

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Cache Maven wrapper
      uses: actions/cache@v3
      with:
        path: ~/.m2/wrapper
        key: ${{ runner.os }}-maven-wrapper-${{ hashFiles('**/.mvn/wrapper/maven-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-maven-wrapper-

    - name: Validate POM
      run: ./mvnw validate

    - name: Compile source code
      run: ./mvnw compile

    - name: Run tests
      run: ./mvnw test

    - name: Run integration tests
      run: ./mvnw verify -Dskip.unit.tests=true
      if: github.event_name == 'pull_request'

    - name: Build with Maven
      run: ./mvnw clean package -DskipTests

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/
        retention-days: 30

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: target/*.jar
        retention-days: 30

    - name: SonarCloud Scan
      if: github.event_name == 'pull_request'
      uses: SonarSource/sonarqube-quality-gate-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Run OWASP dependency check
      run: ./mvnw org.owasp:dependency-check-maven:check

    - name: Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report
        path: target/
        retention-days: 30

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: development

    steps:
    - name: Deploy to development environment
      run: echo "Deploying to development environment"
      # Add your deployment steps here
      # Example: Deploy to AWS, Azure, or other cloud platforms

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
    - name: Deploy to production environment
      run: echo "Deploying to production environment"
      # Add your production deployment steps here
      # Example: Deploy to production servers or cloud platforms
